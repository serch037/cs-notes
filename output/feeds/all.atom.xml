<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Computer Science Notes</title><link href="/" rel="alternate"></link><link href="/feeds/all.atom.xml" rel="self"></link><id>/</id><updated>2015-02-08T00:00:00-06:00</updated><entry><title>AlgorithmÂ Tracing</title><link href="/algorithm-tracing.html" rel="alternate"></link><updated>2015-02-08T00:00:00-06:00</updated><author><name>Sergio Ugalde Marcano</name></author><id>tag:,2015-02-08:algorithm-tracing.html</id><summary type="html">&lt;h2 id="definition"&gt;Definition&lt;/h2&gt;
&lt;p&gt;This refers to a step-by-step analysis of what a computational calculation performs. By making it explicit what is executed in the program and how the variables included are affected in each execution&amp;nbsp;cycle. &lt;/p&gt;
&lt;h2 id="example"&gt;Example&lt;/h2&gt;
&lt;p&gt;The following example, coded in (&lt;em&gt;ref&lt;/em&gt;) C, illustrates the tracing of reversing the contents on an (ref)&amp;nbsp;Array:&lt;/p&gt;
&lt;p&gt;Code:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="cp"&gt;#include &amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="nf"&gt;main&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kt"&gt;void&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;my_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;5&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="kt"&gt;int&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;index&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;size&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;){&lt;/span&gt;
&lt;span class="n"&gt;temp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;my_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;my_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;x&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;my_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="p"&gt;];&lt;/span&gt;
&lt;span class="n"&gt;my_array&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;index&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;temp&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h2 id="tracing"&gt;Tracing:&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;General Information:&lt;ul&gt;
&lt;li&gt;Times the loop runs:&amp;nbsp;3&lt;/li&gt;
&lt;li&gt;Variables &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; their purpose: &lt;em&gt;size&lt;/em&gt;: Self-explanatory; &lt;em&gt;temp&lt;/em&gt;: Aids in swap operation; &lt;em&gt;x&lt;/em&gt;: For loop&amp;nbsp;counter. &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;State of the variables at end of each&amp;nbsp;loop:&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;x&lt;/th&gt;
&lt;th&gt;temp&lt;/th&gt;
&lt;th&gt;my_array[]&lt;/th&gt;
&lt;th&gt;index&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;6,2,3,4,5,1&lt;/td&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;6,5,3,4,2,1&lt;/td&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;6,5,4,3,2,1&lt;/td&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Final &lt;span class="amp"&gt;&amp;amp;&lt;/span&gt; initial state of the&amp;nbsp;array:&lt;/p&gt;
&lt;p&gt;:::text
{1,2,3,4,5,6} becomes&amp;nbsp;{6,5,4,3,2,1}&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id="conclusion"&gt;Conclusion&lt;/h2&gt;</summary><category term="Algorithms"></category><category term="Fourth_Semester"></category></entry><entry><title>C Programming Basics</title><link href="/c-programming-basics.html" rel="alternate"></link><updated>2015-02-08T00:00:00-06:00</updated><author><name>Sergio Ugalde Marcano</name></author><id>tag:,2015-02-08:c-programming-basics.html</id><summary type="html"></summary><category term="C"></category><category term="Fourth_Semester"></category></entry><entry><title>One Dimensional Arrays</title><link href="/one-dimensional-arrays.html" rel="alternate"></link><updated>2015-02-08T00:00:00-06:00</updated><author><name>Sergio Ugalde Marcano</name></author><id>tag:,2015-02-08:one-dimensional-arrays.html</id><summary type="html"></summary><category term="Arrays"></category><category term="Fourth_Semester"></category></entry><entry><title>Subroutines and Functions</title><link href="/subroutines-and-functions.html" rel="alternate"></link><updated>2015-02-08T00:00:00-06:00</updated><author><name>Sergio Ugalde Marcano</name></author><id>tag:,2015-02-08:subroutines-and-functions.html</id><summary type="html"></summary><category term="Functions"></category><category term="Fourth_Semester"></category></entry><entry><title>Two Dimensional Arrays</title><link href="/two-dimensional-arrays.html" rel="alternate"></link><updated>2015-02-08T00:00:00-06:00</updated><author><name>Sergio Ugalde Marcano</name></author><id>tag:,2015-02-08:two-dimensional-arrays.html</id><summary type="html"></summary><category term="Arrays"></category><category term="Fourth_Semester"></category></entry></feed>